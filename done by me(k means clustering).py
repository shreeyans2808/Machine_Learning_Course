# -*- coding: utf-8 -*-
"""Copy of k_means_clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15R5B63TwgkPXSQQHvM7b98dbC6pvUmM1

# K-Means Clustering

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

mc=pd.read_csv('Mall_Customers.csv')
X=mc.iloc[:,[3,4]].values #usingonly two features to help visualise in graph

"""## Using the elbow method to find the optimal number of clusters"""

from sklearn.cluster import KMeans
wcss=[]
for i in range(1,11):
  kmeans=KMeans(n_clusters=i, init='k-means++', random_state=42)
  kmeans.fit(X)
  wcss.append(kmeans.inertia_)
plt.plot(range(1,11),wcss)
plt.title('elbow method')
plt.show()

"""## Training the K-Means model on the dataset"""

from sklearn.cluster import KMeans
kmeans=KMeans(n_clusters=5, init='k-means++', random_state=42)
y= kmeans.fit_predict(X)
print(y)

"""## Visualising the clusters"""

plt.scatter(X[y==0,0],X[y==0,1],color='red',label = 'cluster1')
plt.scatter(X[y==1,0],X[y==1,1],color='green',label = 'cluster2')
plt.scatter(X[y==2,0],X[y==2,1],color='blue',label = 'cluster3')
plt.scatter(X[y==3,0],X[y==3,1],color='black',label = 'cluster4')
plt.scatter(X[y==4,0],X[y==4,1],color='purple',label = 'cluster5')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1], s=300,color='yellow',label='centroid')
plt.xlabel("annual income")
plt.ylabel("spending score")
plt.show()

print(X[y==2])