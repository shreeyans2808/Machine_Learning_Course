# -*- coding: utf-8 -*-
"""Copy of polynomial_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y_O_DYjLn4e6ky21aQQG24GnlbO2z_xQ

# Polynomial Regression

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

ps=pd.read_csv('Position_Salaries.csv')
X=ps.iloc[:,1:-1].values
y=ps.iloc[:,-1].values

"""## Training the Linear Regression model on the whole dataset"""

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(X,y)

"""## Training the Polynomial Regression model on the whole dataset"""

from sklearn.preprocessing import PolynomialFeatures
pr= PolynomialFeatures(degree=4) #changing degree until regression line isnt satisfactory
X_p=pr.fit_transform(X)
lr2=LinearRegression()
lr2.fit(X_p,y)

"""## Visualising the Linear Regression results"""

plt.scatter(X,y,color='green')
plt.title('LR RESULT')
plt.plot(X,lr.predict(X),color='purple')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

"""## Visualising the Polynomial Regression results"""

plt.scatter(X,y,color='green')
plt.title('LR RESULT')
plt.plot(X,lr2.predict(X_p),color='purple')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

"""## Visualising the Polynomial Regression results (for higher resolution and smoother curve)"""

X_grid = np.arange(min(X), max(X), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, lr2.predict(pr.fit_transform(X_grid)), color = 'blue')
plt.title('Truth or Bluff (Polynomial Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""## Predicting a new result with Linear Regression"""

a=lr.predict([[6.5]])
print(a)

"""## Predicting a new result with Polynomial Regression"""

a=lr2.predict(pr.fit_transform([[6.5]]))
print(a)