# -*- coding: utf-8 -*-
"""Copy of support_vector_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12CVA-ZOSfI48-IQt1bYQsOTtgN-Xr1Ry

# Support Vector Regression (SVR)

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

ps=pd.read_csv('Position_Salaries.csv')
X=ps.iloc[:,1:-1]
y=ps.iloc[:,-1]
y=y.to_numpy().reshape(len(y),1)

print(X)

"""## Feature Scaling"""

from sklearn.preprocessing import StandardScaler
scalerx=StandardScaler()
scalery=StandardScaler()
X=scalerx.fit_transform(X)
y=scalery.fit_transform(y)

print(y)

"""## Training the SVR model on the whole dataset"""

from sklearn.svm import SVR
regressor=SVR(kernel='rbf')
regressor.fit(X,y)

"""## Predicting a new result"""

scalery.inverse_transform(regressor.predict(scalerx.transform([[6.5]])).reshape(-1,1))

"""## Visualising the SVR results"""

plt.scatter(scalerx.inverse_transform(X),scalery.inverse_transform(y),color='red')
plt.plot(scalerx.inverse_transform(X),scalery.inverse_transform(regressor.predict(X).reshape(-1,1)),color='blue')
plt.xlabel('lund lele mera')
plt.ylabel('sure')
plt.title('ok')
plt.show()

"""## Visualising the SVR results (for higher resolution and smoother curve)"""

arr=np.arange(min(scalerx.inverse_transform(X)),max(scalerx.inverse_transform(X)),0.1)
arr=arr.reshape(-1,1)
plt.scatter(scalerx.inverse_transform(X),scalery.inverse_transform(y),color='red')
plt.plot(arr,scalery.inverse_transform(regressor.predict(scalerx.transform(arr)).reshape(-1,1)),color='blue')
plt.xlabel('lund lele mera')
plt.ylabel('sure')
plt.title('ok')
plt.show()