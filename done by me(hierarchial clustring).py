# -*- coding: utf-8 -*-
"""Copy of hierarchical_clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pxGKOIhyaif4jIN7Rvr3T1tmiHNbpQJw

# Hierarchical Clustering

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

mc=pd.read_csv('Mall_Customers.csv')
X=mc.iloc[:,[3,4]].values

"""## Using the dendrogram to find the optimal number of clusters"""

import scipy.cluster.hierarchy as sch
ddg= sch.dendrogram(sch.linkage(X, method='ward'))
plt.title('dendogram')
plt.xlabel('datapoints')
plt.ylabel('euclidiean distance')
plt.show()

"""## Training the Hierarchical Clustering model on the dataset"""

from sklearn.cluster import AgglomerativeClustering
hc=AgglomerativeClustering(n_clusters=5,affinity='euclidean',linkage='ward')
hc.fit(X)
y_hc=hc.fit_predict(X)
print(y)

"""## Visualising the clusters"""

plt.scatter(X[y_hc == 0, 0], X[y_hc == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(X[y_hc == 1, 0], X[y_hc == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(X[y_hc == 2, 0], X[y_hc == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(X[y_hc == 3, 0], X[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(X[y_hc == 4, 0], X[y_hc == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.title('Clusters of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()